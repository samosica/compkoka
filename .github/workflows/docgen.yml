name: Generate documentation

on:
  push:
    branches:
      - main
    paths:
      - "src/**/*.kk"
  release:
    types: [released]
  workflow_dispatch:
jobs:
  docgen:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    env:
      LIBRARY_VERSION: ${{ github.event_name == 'release' && github.event.release.tag_name || 'dev' }}
      KOKA_VERSION: 'v3.2.2'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Check if release is latest
        id: latest-check
        run: |
          is_latest='false'
          if [ "$GITHUB_EVENT_NAME" = release ]; then
            is_latest=$(
              gh release list --json tagName,isLatest | \
              jq --raw-output --arg version "$LIBRARY_VERSION" '.[] | select(.tagName == $version) | .isLatest'
            )
          fi
          echo "is_latest=${is_latest}" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ github.token }}
      - name: Create .koka-version
        run: echo "$KOKA_VERSION" >> .koka-version
      - name: Generate documentation
        uses: ./.github/actions/docgen
      - name: Checkout gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: 'gh-pages'
          path: 'gh-pages'
      - name: Commit changes
        env:
          IS_LATEST: ${{ steps.latest-check.outputs.is_latest }}
        run: |
          cd gh-pages/

          if [ -d "$LIBRARY_VERSION" ]; then
            git rm -r "$LIBRARY_VERSION"
          fi
          mkdir "$LIBRARY_VERSION"
          cp -r ../docs/dev/* "$LIBRARY_VERSION"

          if [ "$IS_LATEST" = 'true' ]; then
            if [ -d latest ]; then
              git rm -r latest
            fi
            mkdir latest
            cp -r ../docs/latest/* latest
            sed -i "s/{{LIBRARY_VERSION}}/${LIBRARY_VERSION}/g" latest/toc.html
          fi

          git add -N .
          # See <https://git-scm.com/docs/git-config#Documentation/git-config.txt-corefileMode>
          git config core.filemode false
          if ! git diff --quiet; then
            git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git config --global user.name "github-actions[bot]"
            git add .
            git commit -m "Update documentation ($LIBRARY_VERSION)"
            git push
          fi
