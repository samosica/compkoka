name: Release

on:
  release:
    types: [released]

jobs:
  release-doc:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    env:
      LIBRARY_VERSION: ${{ github.event.release.tag_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
      - name: Check if release is latest
        id: latest-check
        run: |
          is_latest=$(
            gh release list --json tagName,isLatest | \
            jq --raw-output --arg version "$LIBRARY_VERSION" '.[] | select(.tagName == $version) | .isLatest'
          )
          echo "is_latest=${is_latest}" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ github.token }}
      - name: Checkout gh-pages branch
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          ref: 'gh-pages'
          path: 'gh-pages'
      - name: Setup Git
        run: |
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
      - name: Release documentation
        env:
          IS_LATEST: ${{ steps.latest-check.outputs.is_latest }}
        run: |
          cd gh-pages/
          mkdir -p docs/
          cd docs/

          if [ -d "$LIBRARY_VERSION" ]; then
            rm -r "$LIBRARY_VERSION"
          fi
          cp -r ../../docs/dev "$LIBRARY_VERSION"
          sed -i "s/dev/${LIBRARY_VERSION}/" "$LIBRARY_VERSION/toc.html"

          if [ "$IS_LATEST" = 'true' ]; then
            if [ -d latest ]; then
              rm -r latest
            fi
            cp -r ../../docs/latest latest
            sed -i "s/{{LIBRARY_VERSION}}/${LIBRARY_VERSION}/g" latest/toc.html
          fi

          git add -N .
          # See <https://git-scm.com/docs/git-config#Documentation/git-config.txt-corefileMode>
          git config core.filemode false
          if ! git diff --quiet; then
            git add .
            git commit -m "Release documentation ($LIBRARY_VERSION)"
            git push
          fi
